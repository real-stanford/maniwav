defaults:
  - _self_
  - task: umi_maniwav

name: train_diffusion_unet_timm_ms
_target_: diffusion_policy.workspace.train_diffusion_unet_maniwav_workspace.TrainDiffusionUnetManiWAVWorkspace

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "default"

policy:
  _target_: diffusion_policy.policy.diffusion_unet_maniwav_policy.DiffusionUnetManiWAVPolicy

  shape_meta: ${shape_meta}
  
  noise_scheduler:
    _target_: diffusers.DDIMScheduler
    num_train_timesteps: 50 # 25, 10
    beta_start: 0.0001
    beta_end: 0.02
    # beta_schedule is important
    # this is the best we found
    beta_schedule: squaredcos_cap_v2
    clip_sample: True
    set_alpha_to_one: True
    steps_offset: 0
    prediction_type: epsilon # or sample

  obs_encoder:
    _target_: diffusion_policy.model.vision.maniwav_obs_encoder.ManiWAVObsEncoder
    shape_meta: ${shape_meta}
    fusion_mode: 'modality-attention'
    num_heads: 8
    position_encoding: 'sinusoidal'
    vision_encoder_cfg:
      model_name: 'vit_base_patch16_clip_224.openai'
      pretrained: True
      frozen: False

      global_pool: ''
      downsample_ratio: 32
      feature_aggregation: null  # 'avg' or 'max' or 'soft_attention' or 'spatial_embedding' or 'transformer' or 'attention_pool_2d'
      transforms:
        - type: RandomCrop
          ratio: 0.95
        # RandomRotation is not compatible with BF16
        # - _target_: torchvision.transforms.RandomRotation
        #   degrees:
        #     - -5.0
        #     - 5.0
        #   expand: false
        - _target_: torchvision.transforms.ColorJitter
          brightness: 0.3
          contrast: 0.4
          saturation: 0.5
          hue: 0.08
        # - _target_: torchvision.transforms.RandomPerspective
        #   distortion_scale: 0.5
        #   p: 1.0
        # - _target_: torchvision.transforms.ElasticTransform
        #   alpha: 50.0
        #   sigma: 5.0
        # - _target_: torchvision.transforms.RandomPerspective
        #   distortion_scale: 0.5
        #   p: 1.0
        # - _target_: torchvision.transforms.ElasticTransform
        #   alpha: 50.0
        #   sigma: 5.0
        # - _target_: torchvision.transforms.RandomCrop
        #   size: 192

      use_group_norm: True
      share_rgb_model: False
      imagenet_norm: True
    # audio_encoder_cfg:
    #   model_name: 'resnet18'
    #   pretrained: False
    #   global_pool: ''
    #   feature_aggregation: 'avg'
    #   transforms:
    #     - _target_: torchaudio.transforms.Resample
    #       orig_freq: 48000
    #       new_freq: 16000
    #     - _target_: torchaudio.transforms.MelSpectrogram
    #       sample_rate: 16000
    #       n_fft: 400
    #       hop_length: 160
    #       n_mels: 64
    #     # - _target_: torchaudio.transforms.FrequencyMasking
    #     #   freq_mask_param: 24
    #     # - _target_: torchaudio.transforms.TimeMasking
    #     #   time_mask_param: 50
    #     #   p: 0.5
    #   downsample_ratio: 32
    #   use_group_norm: True
    #   share_audio_model: False
    #   norm_spec:
    #     is_norm: True
    #     mean: -6.5
    #     std: 4.7
    #     min: -16.0
    #     max: 10.6
    #     stats_dir: ${multi_run.run_dir}
    audio_encoder_cfg:
      model_name: 'ast'
      pretrained: False
      max_length: 200
      num_mel_bins: 64
      global_pool: ''
      feature_aggregation: null
      transforms:
        - _target_: torchaudio.transforms.Resample
          orig_freq: 48000
          new_freq: 16000
      mask_robot: False
      downsample_ratio: 32
      use_group_norm: True
      share_audio_model: False
      norm_spec:
        is_norm: True
        mean: -6.5
        std: 4.7
        min: -16.0
        max: 10.6
        stats_dir: ${multi_run.run_dir}

  num_inference_steps: 16 # change based on num_train_timesteps
  obs_as_global_cond: True
  diffusion_step_embed_dim: 128
  down_dims: [256,512,1024]
  kernel_size: 5
  n_groups: 8
  cond_predict_scale: True
  input_pertub: 0.1 # reference: https://github.com/forever208/DDPM-IP

ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

dataloader:
  batch_size: 64
  num_workers: 16
  shuffle: True
  pin_memory: True
  persistent_workers: True

val_dataloader:
  batch_size: 64
  num_workers: 16
  shuffle: False
  pin_memory: True
  persistent_workers: True

optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-4
  betas: [0.95, 0.999]
  eps: 1.0e-8
  weight_decay: 1.0e-6

training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: True
  # optimization
  lr_scheduler: cosine
  lr_warmup_steps: 500
  num_epochs: 60
  gradient_accumulate_every: 1
  # EMA destroys performance when used with BatchNorm
  # replace BatchNorm with GroupNorm.
  use_ema: True
  freeze_encoder: False
  # training loop control
  # in epochs
  rollout_every: 10
  checkpoint_every: 10
  val_every: 5
  sample_every: 5
  # steps per epoch
  max_train_steps: null
  max_val_steps: null
  # misc
  tqdm_interval_sec: 1.0

logging:
  project: maniwav
  resume: False
  mode: online
  name: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}
  tags: ["${name}", "${task_name}", "${exp_name}"]
  id: null
  group: null

checkpoint:
  topk:
    monitor_key: train_loss
    mode: min
    k: 5
    format_str: 'epoch={epoch:04d}-train_loss={train_loss:.3f}.ckpt'
  save_last_ckpt: True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
